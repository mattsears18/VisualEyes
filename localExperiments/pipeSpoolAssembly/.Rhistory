library(rstudioapi)
library(lmSupport)
library(ggplot2)
library(ggpmisc)
library(dplyr)
library(ggpubr)
library(lolcat)
library(mediation)
library(lm.beta)
library(car)
source('http://psych.colorado.edu/~jclab/R/mcSummaryLm.R')
filePath = 'pipeSpoolAssembly/results/lastAnalysisExport.csv'
currentPath = paste(strsplit(getActiveDocumentContext()$path, split = "/")[[1]][1:(length(strsplit(getActiveDocumentContext()$path, split = "/")[[1]])-1)], collapse = "/")
filePath = 'pipeSpoolAssembly/results/lastAnalysisExport.csv'
setwd(dirname(currentPath ))
analysis = read.csv(file = paste(c(currentPath, filePath), collapse="/"), header=TRUE)
data = Filter(is.numeric, analysis)
data = data[, -c(1:3)] # delete columns 1 through 3
library(rstudioapi)
library(lmSupport)
library(ggplot2)
library(ggpmisc)
library(dplyr)
library(ggpubr)
library(lolcat)
library(mediation)
library(lm.beta)
library(car)
source('http://psych.colorado.edu/~jclab/R/mcSummaryLm.R')
filePath = 'lastAnalysisExport.csv'
currentPath = paste(strsplit(getActiveDocumentContext()$path, split = "/")[[1]][1:(length(strsplit(getActiveDocumentContext()$path, split = "/")[[1]])-1)], collapse = "/")
setwd(dirname(currentPath ))
analysis = read.csv(file = paste(c(currentPath, filePath), collapse="/"), header=TRUE)
data = Filter(is.numeric, analysis)
data = data[, -c(1:3)] # delete columns 1 through 3
data$indirectWorkET = (data$viewingDurationTotal / data$Total.Time) / 10
data$indirectTimeAA = (data$Indirect.Work.. / 100) * data$Total.Time
data$directTimeAA = (data$Direct.Work.. / 100) * data$Total.Time
data$reworkTimeAA = (data$Rework.. / 100) * data$Total.Time
timeModel = lm(data$Rework.. ~ data$directTimeAA + data$indirectTimeAA + data$reworkTimeAA)
mcSummary(timeModel)
anova(timeModel)
cors2 = cor(data)^2
xName = "Work.Experience"
yName = "X..Errors"
plotLabel = "Period: 5000, Viewing Gap: 5000, Min Viewing Time: 10000"
formula = y ~ x
ggplot(data, aes_string(x = xName, y = yName)) +
geom_point() +
geom_smooth(method = "lm", formula = formula, se = TRUE) +
stat_poly_eq(aes(label =  paste(stat(eq.label), stat(rr.label), stat(adj.rr.label), sep = "~~~~")),
label.x.npc = "left", label.y.npc = 0.90,
formula = formula, rr.digits = 3, coef.digits = 4, parse = TRUE, size = 4) +
stat_fit_glance(method = 'lm',
method.args = list(formula = formula),
geom = 'text',
aes(label = paste("Slope P-value = ", signif(..p.value.., digits = 3), sep = "")),
label.x.npc = 'left', label.y.npc = 0.85, size = 4) +
annotate("text", x = min(data[xName]), y = min(data[yName]) * 0.9, label = plotLabel, hjust = 0, vjust = 0)
x = unlist(data[xName])
y = unlist(data[yName])
model = lm(y ~ x)
summary(model)
########## Test for Mediation #1 ##########
# First test all variables for normality
summary.continuous(data$viewingDurationTotal)
summary.continuous(data$Card.Rotation.Score)
summary.continuous(data$Total.Time)
# CHECK - all variables normally distributed
# https://en.m.wikipedia.org/wiki/Mediation_(statistics)
# https://data.library.virginia.edu/introduction-to-mediation-analysis/
# Step 1. Regress the dependent variable on the independent variable to confirm that the independent variable
#         is a significant predictor of the dependent variable.
mediatorModel1 = lm(Total.Time ~ Card.Rotation.Score, data = data)
summary(mediatorModel1)
mcSummary(mediatorModel1)
# CHECK - Card.Rotation.Score is a significant predictor of Total.Time (p=0.0000311).
# Step 2. Regress the mediator on the independent variable to confirm that the independent variable is a
#         significant predictor of the mediator.
mediatorModel2 = lm(viewingDurationTotal ~ Card.Rotation.Score, data = data)
summary(mediatorModel2)
mcSummary(mediatorModel2)
# CHECK - Card.Rotation.Score is a significant predictor of viewingDurationTotal (p=0.0125).
# Step 3. Regress the dependent variable on both the mediator and independent variable to confirm that
#         the mediator is a significant predictor of the dependent variable, and the previously significant
#         independent variable in Step #1 is now greatly reduced, if not nonsignificant.
mediatorModel3 = lm(Total.Time ~ Card.Rotation.Score + viewingDurationTotal, data = data)
summary(mediatorModel3)
mcSummary(mediatorModel3)
# CHECK - viewingDurationTotal is still a significant predictor of Total.Time (p=0.0000109), and
#         Card.Rotation.Score is less significant (p is greater) (p=0.000216 > p=0.0000311).
########## viewingDurationTotal COULD be considered a mediator, but the Card.Rotation.Score is still
########## highly significatn, so viewingDurationTotal is maybe only a minor mediator.
########## Test for Mediation #2 #########
# First test all variables for normality
summary.continuous(data$viewingDurationTotal)
summary.continuous(data$Indirect.Work..)
summary.continuous(data$Total.Time)
# CHECK - all variables normally distributed
# https://en.m.wikipedia.org/wiki/Mediation_(statistics)
# Step 1. Regress the dependent variable on the independent variable to confirm that the independent variable
#         is a significant predictor of the dependent variable.
mediatorModel1 = lm(Total.Time ~ Indirect.Work.., data=data)
summary(mediatorModel1)
mcSummary(mediatorModel1)
lm.beta(mediatorModel1)
# CHECK - viewingDurationTotal is a significant predictor of Total.Time (p=0.0022).
# Step 2. Regress the mediator on the independent variable to confirm that the independent variable is a
#         significant predictor of the mediator.
mediatorModel2 = lm(viewingDurationTotal ~ Indirect.Work.., data=data)
summary(mediatorModel2)
mcSummary(mediatorModel2)
lm.beta(mediatorModel2)
# CHECK - Indirect.Work.. is a significant predictor of viewingDurationTotal (p=0.0002425).
# Step 3. Regress the dependent variable on both the mediator and independent variable to confirm that
#         the mediator is a significant predictor of the dependent variable, and the previously significant
#         independent variable in Step #1 is now greatly reduced, if not nonsignificant.
mediatorModel3 = lm(Total.Time ~ viewingDurationTotal + Indirect.Work.., data=data)
summary(mediatorModel3)
mcSummary(mediatorModel3)
lm.beta(mediatorModel3)
# CHECK - viewingDurationTotal is still a significant predictor of Total.Time (p=0.000281), and
#         Indirect.Work.. is no longer significant (p=0.859193).
########## viewingDurationTotal is a mediator!
########## Total.Time models ################################################################################
fullModelTotalTime = lm(data$Total.Time ~
data$viewingCountPerAOIMean +
data$viewingCountPerAOIMedian +
data$viewingCountTotal +
data$viewingDurationMean +
data$viewingDurationMedian +
data$viewingDurationTotal +
data$averageConvexHullSizeSlideMean +
data$averageConvexHullSizeSlideMedian +
data$X..Errors +
data$Age +
data$Card.Rotation.Score +
#          data$Composite.Spatial.Cognition.Score +
data$Cube.Comparison.Score +
data$Direct.Work.. +
data$Engineering.Drawings.Training +
#           data$Indirect.Work.. +
data$Rework.. +
data$Work.Experience)
summary(fullModelTotalTime)
mcSummary(fullModelTotalTime)
modelA = lm(data$Total.Time ~ data$viewingDurationTotal + data$Card.Rotation.Score)
modelC = lm(data$Total.Time ~ data$viewingDurationTotal)
mcSummary(modelA)
modelCompare(modelC, modelA)
modelA = lm(data$Total.Time ~ data$viewingDurationTotal)
modelC = lm(data$Total.Time ~ 1)
mcSummary(modelA)
modelCompare(modelC, modelA)
########## Rework models ################################################################################
fullModelRework = lm(data$Rework.. ~
data$viewingCountPerAOIMean +
data$viewingCountPerAOIMedian +
data$viewingCountTotal +
data$viewingDurationMean +
data$viewingDurationMedian +
data$viewingDurationTotal +
data$averageConvexHullSizeSlideMean +
data$averageConvexHullSizeSlideMedian +
data$X..Errors +
data$Age +
data$Card.Rotation.Score +
#          data$Composite.Spatial.Cognition.Score +
data$Cube.Comparison.Score +
#    data$Direct.Work.. +
data$Engineering.Drawings.Training +
#               data$Indirect.Work.. +
data$Total.Time +
data$Work.Experience)
summary(fullModelRework)
mcSummary(fullModelRework)
modelA = lm(data$Rework.. ~ data$X..Errors)
modelC = lm(data$Rework.. ~ 1)
mcSummary(modelA)
modelCompare(modelC, modelA)
library(rstudioapi)
library(lmSupport)
library(ggplot2)
library(ggpmisc)
library(dplyr)
library(ggpubr)
library(lolcat)
library(mediation)
library(lm.beta)
library(car)
source('http://psych.colorado.edu/~jclab/R/mcSummaryLm.R')
filePath = 'lastAnalysisExport.csv'
currentPath = paste(strsplit(getActiveDocumentContext()$path, split = "/")[[1]][1:(length(strsplit(getActiveDocumentContext()$path, split = "/")[[1]])-1)], collapse = "/")
setwd(dirname(currentPath ))
analysis = read.csv(file = paste(c(currentPath, filePath), collapse="/"), header=TRUE)
data = Filter(is.numeric, analysis)
data = data[, -c(1:3)] # delete columns 1 through 3
View(data)
View(data)
